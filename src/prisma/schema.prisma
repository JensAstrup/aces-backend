generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  linearId         String?   @unique
  email            String?   @unique
  displayName      String?
  token            String    @unique
  created_rounds   Round[]
  joined_rounds    RoundGuest[]
  votes            Vote[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Vote{
  id               String    @id @default(cuid())
  linearId         String?
  issue            Issue     @relation(fields: [issueId], references: [id])
  issueId          String
  user             User      @relation(fields: [userId], references: [id])
  userId           String
  vote             Int
  createdAt        DateTime  @default(now())
}

model Issue{
  id               String    @id @default(cuid())
  linearId         String?
  title            String
  round            Round     @relation(fields: [roundId], references: [id])
  roundId          String
  votes            Vote[]
  activeRounds     Round[]   @relation("currentIssue")
}

enum RoundStatus {
  CREATED
  FINISHED
}

model Round {
  id               String    @id @default(cuid())
  creator          User      @relation(fields: [creatorId], references: [id])
  creatorId        String
  guests           RoundGuest[]
  issues           Issue[]
  status           RoundStatus @default(CREATED)
  currentIssue     Issue?      @relation("currentIssue", fields: [currentIssueId], references: [id])
  currentIssueId   String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model RoundGuest {
  user             User      @relation(fields: [userId], references: [id])
  userId           String
  round            Round     @relation(fields: [roundId], references: [id])
  roundId          String

  @@id([userId, roundId])
}
